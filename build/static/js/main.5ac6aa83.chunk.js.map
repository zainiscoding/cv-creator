{"version":3,"sources":["components/InputBasicInfo.js","components/InputEducation.js","components/InputWorkExperience.js","components/InputsContainer.js","components/CvBasicInfoContainer.js","components/CvEducationInfoContainer.js","components/CvWorkExperienceInfoContainer.js","components/DisplayCv.js","App.js","index.js"],"names":["InputBasicInfo","props","setInputFocus","e","setState","target","id","unsetInputFocus","checkEmailInput","value","match","emailError","checkPhoneNumberInput","phoneNumberError","length","state","emailEditing","phoneNumberEditing","bind","className","htmlFor","this","requiredText","name","type","title","onChange","checkEmptyInput","onBlur","info","inputError","onClick","submitChange","Component","uniqid","require","InputEducation","changeAddEducationState","addingEducation","educationInputsContainer","map","education","index","key","removeStateItem","InputWorkExperience","changeAddWorkExperienceState","addingWorkExperience","workExperienceInputsContainer","work","InputsContainer","BasicInfoContainer","emailIcon","icon","faEnvelope","phoneIcon","faPhoneAlt","websiteIcon","faExternalLinkAlt","basicInputsContainer","email","phoneNumber","website","EducationInfoContainer","detail","i","charAt","WorkExperienceInfoContainer","experience","DisplayCv","App","preventDefault","targetId","parseInt","targetState","parentNode","filteredState","filter","obj","indexOf","allInputElements","Array","from","children","allInputs","forEach","node","push","educationInputs","input","workInputs","educationCounter","workCounter","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5ac6aa83.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nclass InputBasicInfo extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      emailError: false,\n      phoneNumberError: false,\n      emailEditing: true,\n      phoneNumberEditing: true,\n    };\n    this.checkEmailInput = this.checkEmailInput.bind(this);\n    this.checkPhoneNumberInput = this.checkPhoneNumberInput.bind(this);\n    this.setInputFocus = this.setInputFocus.bind(this);\n  }\n\n  //Lets React know when you're editing an input\n  setInputFocus = (e) => {\n    return this.setState({ [e.target.id + 'Editing']: true });\n  };\n\n  unsetInputFocus = (e) => {\n    return this.setState({ [e.target.id + 'Editing']: false });\n  };\n\n  //Input validation for email\n  checkEmailInput = (e) => {\n    this.setInputFocus(e);\n    const emailTest = /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/;\n    if (e.target.value.match(emailTest)) {\n      return this.setState({ emailError: false }, this.unsetInputFocus(e));\n    } else return this.setState({ emailError: true });\n  };\n\n  //Input validation for phone number\n  checkPhoneNumberInput = (e) => {\n    this.setInputFocus(e);\n\n    const numberTest = /^\\d{10}$/;\n    if (e.target.value.match(numberTest)) {\n      return this.setState(\n        { phoneNumberError: false },\n        this.unsetInputFocus(e)\n      );\n    } else if (e.target.value.length === 0) {\n      return this.setState({ phoneNumberError: false });\n    } else {\n      return this.setState({ phoneNumberError: true });\n    }\n  };\n\n  render() {\n    return (\n      <div id='basicInputsContainer' className='inputArea'>\n        <h2>Basic Information</h2>\n        <label htmlFor='nameInput'>Full name {this.props.requiredText}</label>\n        <input\n          name='basic'\n          type='text'\n          id='name'\n          className='input'\n          title='Name'\n          onChange={this.props.checkEmptyInput}\n        ></input>\n        <label htmlFor='email'>Email address {this.props.requiredText}</label>\n        {this.state.emailError === true && this.state.emailEditing === true && (\n          <div className='inputErrorContainer'>\n            <p className='inputFieldError'>Enter a valid email address!</p>\n          </div>\n        )}\n        <input\n          name='basic'\n          type='email'\n          id='email'\n          className='input'\n          title='Email'\n          onChange={this.checkEmailInput}\n          onBlur={this.unsetInputFocus}\n        ></input>\n        <label htmlFor='phoneNumber'>Phone number</label>\n        {this.state.phoneNumberError === true &&\n          this.state.phoneNumberEditing === true && (\n            <div className='inputErrorContainer'>\n              <p className='inputFieldError'>Enter a valid phone number!</p>\n            </div>\n          )}\n        <input\n          name='basic'\n          type='text'\n          id='phoneNumber'\n          className='input'\n          title='Phone'\n          onChange={this.checkPhoneNumberInput}\n        ></input>\n        <label htmlFor='website'>Website</label>\n        <input\n          name='basic'\n          type='url'\n          id='website'\n          className='input'\n          title='Website'\n        ></input>\n        {this.props.info.inputError === false &&\n          this.state.emailEditing === false &&\n          this.state.emailError === false &&\n          this.state.phoneNumberError === false && (\n            <div className='submitBtnContainer'>\n              <button\n                type='submit'\n                id='submitBasicInfoBtn'\n                onClick={this.props.submitChange}\n              >\n                Submit\n              </button>\n            </div>\n          )}\n      </div>\n    );\n  }\n}\n\nexport default InputBasicInfo;\n","import React, { Component } from 'react';\nvar uniqid = require('uniqid');\n\nclass InputEducation extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      addingEducation: false,\n    };\n    this.changeAddEducationState = this.changeAddEducationState.bind(this);\n  }\n\n  //Used to submit or cancel entering an entry\n  changeAddEducationState = (e) => {\n    if (this.state.addingEducation === true) {\n      this.props.submitChange(e);\n    }\n\n    if (this.state.addingEducation === true) {\n      this.setState({ addingEducation: false });\n    } else this.setState({ addingEducation: true });\n  };\n\n  render() {\n    return (\n      <div id='educationInputsContainer' className='inputArea'>\n        <h2>Education</h2>\n        {this.state.addingEducation === true && (\n          <>\n            <label htmlFor='institutionNameInput'>\n              Institution name {this.props.requiredText}\n            </label>\n            <input\n              name='education'\n              type='text'\n              id='institutionName'\n              className='input'\n              title=''\n              onChange={this.props.checkEmptyInput}\n            ></input>\n            <label htmlFor='courseName'>Course name</label>\n            <input\n              name='education'\n              type='text'\n              id='courseName'\n              className='input'\n              title=''\n            ></input>\n            <label htmlFor='startDate'>Start date</label>\n            <input\n              name='education'\n              type='date'\n              id='startDate'\n              className='input'\n              title='Start'\n            ></input>\n            <label htmlFor='endDate'>End date</label>\n            <input\n              name='education'\n              type='date'\n              id='endDate'\n              className='input'\n              title='End'\n            ></input>\n            {this.props.info.inputError === false && (\n              <div id='submitEducationBtnContainer'>\n                <button\n                  id='submitEducationBtn'\n                  onClick={this.changeAddEducationState}\n                >\n                  Submit entry\n                </button>\n              </div>\n            )}\n            <div id='cancelAddEducation'>\n              <button\n                id='cancelAddEducationBtnBtn'\n                className='cancelBtn'\n                onClick={this.changeAddEducationState}\n              >\n                Cancel\n              </button>\n            </div>\n          </>\n        )}\n        {this.state.addingEducation === false && (\n          <div id='addEducationBtnContainer'>\n            <button id='addEducationBtn' onClick={this.changeAddEducationState}>\n              Add entry\n            </button>\n          </div>\n        )}\n        <div id='inputAreaEducationInfoContainer'>\n          {this.props.info.educationInputsContainer.map((education, index) => {\n            return (\n              <div id={index} className='entryInputArea' key={uniqid()}>\n                <button\n                  id={index}\n                  onClick={this.props.removeStateItem}\n                  className='entryDeleteBtn'\n                >\n                  X\n                </button>\n                <p>Education {index + 1}</p>\n                {education[0]}\n              </div>\n            );\n          })}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default InputEducation;\n","import React, { Component } from 'react';\nvar uniqid = require('uniqid');\n\nclass InputWorkExperience extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      addingWorkExperience: false,\n    };\n    this.changeAddWorkExperienceState = this.changeAddWorkExperienceState.bind(\n      this\n    );\n  }\n\n  //Used to submit or cancel entering an entry\n  changeAddWorkExperienceState = (e) => {\n    if (this.state.addingWorkExperience === true) {\n      this.props.submitChange(e);\n    }\n\n    if (this.state.addingWorkExperience === true) {\n      this.setState({ addingWorkExperience: false });\n    } else this.setState({ addingWorkExperience: true });\n  };\n\n  render() {\n    return (\n      <div id='workExperienceInputsContainer' className='inputArea'>\n        <h2>Work Experience</h2>\n        {this.state.addingWorkExperience === true && (\n          <>\n            <label htmlFor='companyName'>\n              Company name {this.props.requiredText}\n            </label>\n            <input\n              name='workExperience'\n              type='text'\n              id='companyName'\n              className='input'\n              title=''\n              onChange={this.props.checkEmptyInput}\n            ></input>\n            <label htmlFor='jobTitleInput'>Job Title</label>\n            <input\n              name='workExperience'\n              type='text'\n              id='jobTitle'\n              className='input'\n              title=''\n            ></input>\n            <label htmlFor='startDate'>Start date</label>\n            <input\n              name='workExperience'\n              type='date'\n              id='startDate'\n              className='input'\n              title='Start'\n            ></input>\n            <label htmlFor='endDate'>End date</label>\n            <input\n              name='workExperience'\n              type='date'\n              id='endDate'\n              className='input'\n              title='End'\n            ></input>\n            {this.props.info.inputError === false && (\n              <div id='submitWorkBtnContainer'>\n                <button\n                  id='submitWorkBtn'\n                  onClick={this.changeAddWorkExperienceState}\n                >\n                  Submit entry\n                </button>\n              </div>\n            )}\n            <div id='cancelAddWorkExperience'>\n              <button\n                id='cancelAddWorkExperienceBtn'\n                className='cancelBtn'\n                onClick={this.changeAddWorkExperienceState}\n              >\n                Cancel\n              </button>\n            </div>\n          </>\n        )}\n        {this.state.addingWorkExperience === false && (\n          <div id='addWorkExperienceBtnContainer'>\n            <button\n              id='addWorkExperienceButton'\n              onClick={this.changeAddWorkExperienceState}\n            >\n              Add entry\n            </button>\n          </div>\n        )}\n        <div id='inputAreaWorkInfoContainer'>\n          {this.props.info.workExperienceInputsContainer.map((work, index) => {\n            return (\n              <div id={index} className='entryInputArea' key={uniqid()}>\n                <button\n                  id={index}\n                  onClick={this.props.removeStateItem}\n                  className='entryDeleteBtn'\n                >\n                  X\n                </button>\n                <p>Work {index + 1}</p>\n                {work[0]}\n              </div>\n            );\n          })}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default InputWorkExperience;\n","import React, { Component } from 'react';\nimport InputBasicInfo from './InputBasicInfo';\nimport InputEducation from './InputEducation';\nimport InputWorkExperience from './InputWorkExperience';\n\nclass InputsContainer extends Component {\n  render() {\n    const requiredText = <p className='textRequired'>Required</p>;\n    return (\n      <div id='inputsContainer'>\n        <InputBasicInfo\n          info={this.props.info}\n          submitChange={this.props.submitChange}\n          checkEmptyInput={this.props.checkEmptyInput}\n          requiredText={requiredText}\n        />\n        <InputEducation\n          submitChange={this.props.submitChange}\n          removeStateItem={this.props.removeStateItem}\n          info={this.props.info}\n          checkEmptyInput={this.props.checkEmptyInput}\n          requiredText={requiredText}\n        />\n        <InputWorkExperience\n          submitChange={this.props.submitChange}\n          removeStateItem={this.props.removeStateItem}\n          info={this.props.info}\n          checkEmptyInput={this.props.checkEmptyInput}\n          requiredText={requiredText}\n        />\n      </div>\n    );\n  }\n}\n\nexport default InputsContainer;\n","import React, { Component } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faEnvelope } from '@fortawesome/free-solid-svg-icons';\nimport { faPhoneAlt } from '@fortawesome/free-solid-svg-icons';\nimport { faExternalLinkAlt } from '@fortawesome/free-solid-svg-icons';\n\nclass BasicInfoContainer extends Component {\n  render() {\n    const emailIcon = <FontAwesomeIcon icon={faEnvelope} />;\n    const phoneIcon = <FontAwesomeIcon icon={faPhoneAlt} />;\n    const websiteIcon = <FontAwesomeIcon icon={faExternalLinkAlt} />;\n    return (\n      <div id='basicInfoContainer'>\n        <div id='nameContainer'>\n          <p>{this.props.info.basicInputsContainer.name}</p>\n        </div>\n        <div id='basicInfoExtraContainer'>\n          <div id='emailContainer' className='basicInfoExtraContainerItem'>\n            {this.props.info.basicInputsContainer.email && <p>{emailIcon}</p>}\n            <p>{this.props.info.basicInputsContainer.email}</p>\n          </div>\n          <div\n            id='phoneNumberContainer'\n            className='basicInfoExtraContainerItem'\n          >\n            {this.props.info.basicInputsContainer.phoneNumber && (\n              <>{phoneIcon}</>\n            )}\n            <p>{this.props.info.basicInputsContainer.phoneNumber}</p>\n          </div>\n          <div id='websiteContainer' className='basicInfoExtraContainerItem'>\n            {this.props.info.basicInputsContainer.website && (\n              <p>{websiteIcon}</p>\n            )}\n            <p>{this.props.info.basicInputsContainer.website}</p>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default BasicInfoContainer;\n","import React, { Component } from 'react';\nvar uniqid = require('uniqid');\n\nclass EducationInfoContainer extends Component {\n  render() {\n    return (\n      <div id='educationInfoContainer'>\n        <h2>Education</h2>\n        {this.props.info.educationInputsContainer.map((education) => {\n          return (\n            <>\n              <div className='entryContainer' key={uniqid()}>\n                <div key={uniqid()} className='entry'>\n                  {education.map((detail, i) => {\n                    if (detail.charAt(detail.length - 1) !== '') {\n                      if (i === 0) {\n                        return (\n                          <div className='entryTitle'>\n                            <p key={i}>{detail}</p>\n                          </div>\n                        );\n                      } else if (i === 1) {\n                        return (\n                          <div className='entryPlaceName'>\n                            <p key={i}>{detail}</p>\n                          </div>\n                        );\n                      } else if (i === 2 || i === 3) {\n                        return (\n                          <div className='entryDate'>\n                            <p key={i}>{detail}</p>\n                          </div>\n                        );\n                      }\n                    }\n                    return '';\n                  })}\n                </div>\n              </div>\n            </>\n          );\n        })}\n      </div>\n    );\n  }\n}\n\nexport default EducationInfoContainer;\n","import React, { Component } from 'react';\nvar uniqid = require('uniqid');\n\nclass WorkExperienceInfoContainer extends Component {\n  render() {\n    return (\n      <div id='workExperienceInfoContainer'>\n        <h2>Work Experience</h2>\n        {this.props.info.workExperienceInputsContainer.map((experience) => {\n          return (\n            <>\n              <div className='entryContainer' key={uniqid()}>\n                <div key={uniqid()} className='entry'>\n                  {experience.map((detail, i) => {\n                    if (detail.charAt(detail.length - 1) !== '') {\n                      if (i === 0) {\n                        return (\n                          <div className='entryTitle'>\n                            <p key={i}>{detail}</p>\n                          </div>\n                        );\n                      } else if (i === 1) {\n                        return (\n                          <div className='entryPlaceName'>\n                            <p key={i}>{detail}</p>\n                          </div>\n                        );\n                      } else if (i === 2 || i === 3) {\n                        return (\n                          <div className='entryDate'>\n                            <p key={i}>{detail}</p>\n                          </div>\n                        );\n                      }\n                    }\n                    return '';\n                  })}\n                </div>\n              </div>\n            </>\n          );\n        })}\n      </div>\n    );\n  }\n}\n\nexport default WorkExperienceInfoContainer;\n","import React, { Component } from 'react';\nimport BasicInfoContainer from './CvBasicInfoContainer';\nimport EducationInfoContainer from './CvEducationInfoContainer';\nimport WorkExperienceInfoContainer from './CvWorkExperienceInfoContainer';\n\nclass DisplayCv extends Component {\n  render() {\n    return (\n      <div id='CV'>\n        <BasicInfoContainer info={this.props.info} />\n        {this.props.info.educationInputsContainer.length !== 0 && (\n          <EducationInfoContainer info={this.props.info} />\n        )}\n        {this.props.info.workExperienceInputsContainer.length !== 0 && (\n          <WorkExperienceInfoContainer info={this.props.info} />\n        )}\n      </div>\n    );\n  }\n}\n\nexport default DisplayCv;\n","import React, { Component } from 'react';\nimport InputsContainer from './components/InputsContainer';\nimport DisplayCv from './components/DisplayCv';\nimport './styles/reset.css';\nimport './styles/main.css';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      educationCounter: -1,\n      workCounter: -1,\n      inputError: true,\n      basicInputsContainer: {},\n      educationInputsContainer: [],\n      workExperienceInputsContainer: [],\n    };\n    this.submitChange = this.submitChange.bind(this);\n    this.removeStateItem = this.removeStateItem.bind(this);\n    this.checkEmptyInput = this.checkEmptyInput.bind(this);\n  }\n\n  //Checks for an empty input and reflects it in the state. Used to prevent submission\n  checkEmptyInput = (e) => {\n    if (e.target.value.length === 0) {\n      return this.setState({ inputError: true });\n    } else if (e.target.value.length > 0) {\n      return this.setState({ inputError: false });\n    }\n  };\n\n  //Remove an entry from the state\n  removeStateItem = (e) => {\n    e.preventDefault();\n    const targetId = parseInt(e.target.id);\n    const targetState = e.target.parentNode.parentNode.parentNode.id;\n\n    let filteredState = this.state[targetState];\n\n    filteredState = filteredState.filter(\n      (obj) => filteredState.indexOf(obj) !== targetId\n    );\n    this.setState((state) => {\n      return (state[targetState] = filteredState);\n    });\n  };\n\n  submitChange = (e) => {\n    e.preventDefault();\n\n    if (this.state.inputError === false) {\n      const allInputElements = Array.from(\n        e.target.parentNode.parentNode.children\n      );\n      const allInputs = [];\n\n      allInputElements.forEach((node) => {\n        if (node.className === 'input') {\n          allInputs.push(node);\n        }\n      });\n\n      //Gathers the information from individual education entries and pushes them into an array\n      const educationInputs = [];\n      allInputs.forEach((input) => {\n        if (\n          input.name === 'education' &&\n          input.title !== '' &&\n          input.value.length > 0\n        ) {\n          educationInputs.push(input.title + ': ' + input.value);\n        } else if (input.name === 'education' && input.value.length > 0) {\n          educationInputs.push(input.title + input.value);\n        }\n      });\n      //Gathers the information from individual work entires and pushes them into an array\n      const workInputs = [];\n      allInputs.forEach((input) => {\n        if (\n          input.name === 'workExperience' &&\n          input.title !== '' &&\n          input.value.length > 0\n        ) {\n          workInputs.push(input.title + ': ' + input.value);\n        } else if (input.name === 'workExperience' && input.value.length > 0) {\n          workInputs.push(input.title + input.value);\n        }\n      });\n\n      //Increase the education counter when submitting an education entry\n      if (e.target.id === 'submitEducationBtn') {\n        this.setState((state) => {\n          return { educationCounter: state.educationCounter + 1 };\n        });\n      }\n\n      //Increase the work counter when submitting a work entry\n      if (e.target.id === 'submitWorkBtn') {\n        this.setState((state) => {\n          return { workCounter: state.workCounter + 1 };\n        });\n      }\n\n      //Add the values of the input to their respective state objects\n      //This works, but acts weird when you hit submit again...\n      allInputs.forEach((input) => {\n        this.setState((state) => {\n          //Creates a new education object within educationInputsCounter, with educationCounter as the object key\n          if (input.name === 'education') {\n            return (state.educationInputsContainer[state.educationCounter] = [\n              ...educationInputs,\n            ]);\n            //Same as above but for work entries\n          } else if (input.name === 'workExperience') {\n            return (state.workExperienceInputsContainer[state.workCounter] = [\n              ...workInputs,\n            ]);\n            //Prevents the applicant's name from displaying as, for example, \"Name: John Smith\"\n          } else if (input.title !== 'Name' && input.value.length !== 0) {\n            return (state[input.parentNode.id][input.id] = input.value);\n          } else {\n            return (state[input.parentNode.id][input.id] = input.value);\n          }\n        });\n      });\n    }\n  };\n\n  render() {\n    const info = this.state;\n    return (\n      <div id='App'>\n        <div id='Inputs'>\n          <InputsContainer\n            submitChange={this.submitChange}\n            removeStateItem={this.removeStateItem}\n            checkEmptyInput={this.checkEmptyInput}\n            info={info}\n          />\n        </div>\n        <DisplayCv info={info} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}