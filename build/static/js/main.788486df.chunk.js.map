{"version":3,"sources":["components/InputBasicInfo.js","components/InputEducation.js","components/InputWorkExperience.js","components/InputsContainer.js","components/DisplayCV.js","App.js","index.js"],"names":["InputBasicInfo","props","setInputFocus","e","setState","target","id","unsetInputFocus","checkEmailInput","value","match","emailError","checkPhoneNumberInput","phoneNumberError","length","state","emailEditing","phoneNumberEditing","bind","className","htmlFor","this","requiredText","name","type","title","onChange","checkEmptyInput","onBlur","info","inputError","onClick","submitChange","Component","uniqid","require","InputEducation","changeAddEducationState","addingEducation","educationInputsContainer","map","education","index","key","removeStateItem","InputWorkExperience","changeAddWorkExperienceState","addingWorkExperience","workExperienceInputsContainer","work","InputsContainer","DisplayCV","basicInputsContainer","email","phoneNumber","phone","website","detail","i","charAt","experience","App","changeEditingState","editing","preventDefault","targetId","parseInt","targetState","parentNode","console","log","filteredState","filter","obj","indexOf","allInputElements","Array","from","children","allInputs","forEach","node","push","educationInputs","input","workInputs","educationCounter","workCounter","icon","faEnvelope","faPhoneAlt","faExternalLinkAlt","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.788486df.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nclass InputBasicInfo extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            emailError: false,\n            phoneNumberError: false,\n            emailEditing: true,\n            phoneNumberEditing: true,\n        };\n        this.checkEmailInput = this.checkEmailInput.bind(this);\n        this.checkPhoneNumberInput = this.checkPhoneNumberInput.bind(this);\n        this.setInputFocus = this.setInputFocus.bind(this);\n    }\n\n    //change Email to e.value.... id, so you can use it on anything!\n\n    setInputFocus = (e) => {\n        return this.setState({ [e.target.id + 'Editing']: true });\n    };\n\n    unsetInputFocus = (e) => {\n        return this.setState({ [e.target.id + 'Editing']: false });\n    };\n\n    checkEmailInput = (e) => {\n        this.setInputFocus(e);\n        const emailTest = /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/;\n        if (e.target.value.match(emailTest)) {\n            return this.setState(\n                { emailError: false },\n                this.unsetInputFocus(e)\n            );\n        } else return this.setState({ emailError: true });\n    };\n\n    checkPhoneNumberInput = (e) => {\n        this.setInputFocus(e);\n\n        const numberTest = /^\\d{10}$/;\n        if (e.target.value.match(numberTest)) {\n            return this.setState(\n                { phoneNumberError: false },\n                this.unsetInputFocus(e)\n            );\n        } else if (e.target.value.length === 0) {\n            return this.setState({ phoneNumberError: false });\n        } else {\n            return this.setState({ phoneNumberError: true });\n        }\n    };\n\n    render() {\n        return (\n            <div id='basicInputsContainer' className='inputArea'>\n                <h2>Basic Information</h2>\n                <label htmlFor='nameInput'>\n                    Full name {this.props.requiredText}\n                </label>\n                <input\n                    name='basic'\n                    type='text'\n                    id='name'\n                    className='input'\n                    title='Name'\n                    onChange={this.props.checkEmptyInput}\n                ></input>\n                <label htmlFor='email'>\n                    Email address {this.props.requiredText}\n                </label>\n                {this.state.emailError === true &&\n                    this.state.emailEditing === true && (\n                        <div className='inputErrorContainer'>\n                            <p className='inputFieldError'>\n                                Enter a valid email address!\n                            </p>\n                        </div>\n                    )}\n                <input\n                    name='basic'\n                    type='email'\n                    id='email'\n                    className='input'\n                    title='Email'\n                    onChange={this.checkEmailInput}\n                    onBlur={this.unsetInputFocus}\n                ></input>\n                <label htmlFor='phoneNumber'>Phone number</label>\n                {this.state.phoneNumberError === true &&\n                    this.state.phoneNumberEditing === true && (\n                        <div className='inputErrorContainer'>\n                            <p className='inputFieldError'>\n                                Enter a valid phone number!\n                            </p>\n                        </div>\n                    )}\n                <input\n                    name='basic'\n                    type='text'\n                    id='phoneNumber'\n                    className='input'\n                    title='Phone'\n                    onChange={this.checkPhoneNumberInput}\n                ></input>\n                <label htmlFor='website'>Website</label>\n                <input\n                    name='basic'\n                    type='url'\n                    id='website'\n                    className='input'\n                    title='Website'\n                ></input>\n                {this.props.info.inputError === false &&\n                    this.state.emailEditing === false &&\n                    this.state.emailError === false &&\n                    this.state.phoneNumberError === false && (\n                        <div className='submitBtnContainer'>\n                            <button\n                                type='submit'\n                                id='submitBasicInfoBtn'\n                                onClick={this.props.submitChange}\n                            >\n                                Submit\n                            </button>\n                        </div>\n                    )}\n            </div>\n        );\n    }\n}\n\nexport default InputBasicInfo;\n","import React, { Component } from 'react';\nvar uniqid = require('uniqid');\n\nclass InputEducation extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            addingEducation: false,\n        };\n        this.changeAddEducationState = this.changeAddEducationState.bind(this);\n    }\n\n    changeAddEducationState = (e) => {\n        if (this.state.addingEducation === true) {\n            this.props.submitChange(e);\n        }\n\n        if (this.state.addingEducation === true) {\n            this.setState({ addingEducation: false });\n        } else this.setState({ addingEducation: true });\n    };\n\n    render() {\n        return (\n            <div id='educationInputsContainer' className='inputArea'>\n                <h2>Education</h2>\n                {this.state.addingEducation === true && (\n                    <>\n                        <label htmlFor='institutionNameInput'>\n                            Institution name {this.props.requiredText}\n                        </label>\n                        <input\n                            name='education'\n                            type='text'\n                            id='institutionName'\n                            className='input'\n                            title=''\n                            onChange={this.props.checkEmptyInput}\n                        ></input>\n                        <label htmlFor='courseName'>Course name</label>\n                        <input\n                            name='education'\n                            type='text'\n                            id='courseName'\n                            className='input'\n                            title=''\n                        ></input>\n                        <label htmlFor='startDate'>Start date</label>\n                        <input\n                            name='education'\n                            type='date'\n                            id='startDate'\n                            className='input'\n                            title='Start'\n                        ></input>\n                        <label htmlFor='endDate'>End date</label>\n                        <input\n                            name='education'\n                            type='date'\n                            id='endDate'\n                            className='input'\n                            title='End'\n                        ></input>\n                        {this.props.info.inputError === false && (\n                            <div id='submitEducationBtnContainer'>\n                                <button\n                                    id='submitEducationBtn'\n                                    onClick={this.changeAddEducationState}\n                                >\n                                    Submit entry\n                                </button>\n                            </div>\n                        )}\n                    </>\n                )}\n                {this.state.addingEducation === false && (\n                    <div id='addEducationBtnContainer'>\n                        <button\n                            id='addEducationBtn'\n                            onClick={this.changeAddEducationState}\n                        >\n                            Add entry\n                        </button>\n                    </div>\n                )}\n                <div id='inputAreaEducationInfoContainer'>\n                    {this.props.info.educationInputsContainer.map(\n                        (education, index) => {\n                            return (\n                                <div\n                                    id={index}\n                                    className='entryInputArea'\n                                    key={uniqid()}\n                                >\n                                    <button\n                                        id={index}\n                                        onClick={this.props.removeStateItem}\n                                        className='entryDeleteBtn'\n                                    >\n                                        X\n                                    </button>\n                                    <p>Education {index + 1}</p>\n                                    {education[0]}\n                                </div>\n                            );\n                        }\n                    )}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default InputEducation;\n","import React, { Component } from 'react';\nvar uniqid = require('uniqid');\n\nclass InputWorkExperience extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            addingWorkExperience: false,\n        };\n        this.changeAddWorkExperienceState = this.changeAddWorkExperienceState.bind(\n            this\n        );\n    }\n\n    changeAddWorkExperienceState = (e) => {\n        if (this.state.addingWorkExperience === true) {\n            this.props.submitChange(e);\n        }\n\n        if (this.state.addingWorkExperience === true) {\n            this.setState({ addingWorkExperience: false });\n        } else this.setState({ addingWorkExperience: true });\n    };\n\n    render() {\n        return (\n            <div id='workExperienceInputsContainer' className='inputArea'>\n                <h2>Work Experience</h2>\n                {this.state.addingWorkExperience === true && (\n                    <>\n                        <label htmlFor='companyName'>\n                            Company name {this.props.requiredText}\n                        </label>\n                        <input\n                            name='workExperience'\n                            type='text'\n                            id='companyName'\n                            className='input'\n                            title=''\n                            onChange={this.props.checkEmptyInput}\n                        ></input>\n                        <label htmlFor='jobTitleInput'>Job Title</label>\n                        <input\n                            name='workExperience'\n                            type='text'\n                            id='jobTitle'\n                            className='input'\n                            title=''\n                        ></input>\n                        <label htmlFor='startDate'>Start date</label>\n                        <input\n                            name='workExperience'\n                            type='date'\n                            id='startDate'\n                            className='input'\n                            title='Start'\n                        ></input>\n                        <label htmlFor='endDate'>End date</label>\n                        <input\n                            name='workExperience'\n                            type='date'\n                            id='endDate'\n                            className='input'\n                            title='End'\n                        ></input>\n                        {this.props.info.inputError === false && (\n                            <div id='submitWorkBtnContainer'>\n                                <button\n                                    id='submitWorkBtn'\n                                    onClick={this.changeAddWorkExperienceState}\n                                >\n                                    Submit entry\n                                </button>\n                            </div>\n                        )}\n                    </>\n                )}\n                {this.state.addingWorkExperience === false && (\n                    <div id='addWorkExperienceBtnContainer'>\n                        <button\n                            id='addWorkExperienceButton'\n                            onClick={this.changeAddWorkExperienceState}\n                        >\n                            Add entry\n                        </button>\n                    </div>\n                )}\n                <div id='inputAreaWorkInfoContainer'>\n                    {this.props.info.workExperienceInputsContainer.map(\n                        (work, index) => {\n                            return (\n                                <div\n                                    id={index}\n                                    className='entryInputArea'\n                                    key={uniqid()}\n                                >\n                                    <button\n                                        id={index}\n                                        onClick={this.props.removeStateItem}\n                                        className='entryDeleteBtn'\n                                    >\n                                        X\n                                    </button>\n                                    <p>Work {index + 1}</p>\n                                    {work[0]}\n                                </div>\n                            );\n                        }\n                    )}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default InputWorkExperience;\n","import React, { Component } from 'react';\nimport InputBasicInfo from './InputBasicInfo';\nimport InputEducation from './InputEducation';\nimport InputWorkExperience from './InputWorkExperience';\n\nclass InputsContainer extends Component {\n    render() {\n        const requiredText = <p className='textRequired'>(Required)</p>;\n        return (\n            <div id='inputsContainer'>\n                <InputBasicInfo\n                    info={this.props.info}\n                    submitChange={this.props.submitChange}\n                    checkEmptyInput={this.props.checkEmptyInput}\n                    requiredText={requiredText}\n                />\n                <InputEducation\n                    submitChange={this.props.submitChange}\n                    removeStateItem={this.props.removeStateItem}\n                    info={this.props.info}\n                    checkEmptyInput={this.props.checkEmptyInput}\n                    requiredText={requiredText}\n                />\n                <InputWorkExperience\n                    submitChange={this.props.submitChange}\n                    removeStateItem={this.props.removeStateItem}\n                    info={this.props.info}\n                    checkEmptyInput={this.props.checkEmptyInput}\n                    requiredText={requiredText}\n                />\n            </div>\n        );\n    }\n}\n\nexport default InputsContainer;\n","import React, { Component } from 'react';\nvar uniqid = require('uniqid');\n\nclass DisplayCV extends Component {\n    render() {\n        return (\n            <div id='CV'>\n                <div id='basicInfoContainer'>\n                    <div id='nameContainer'>\n                        <p>{this.props.info.basicInputsContainer.name}</p>\n                    </div>\n                    <div id='basicInfoExtraContainer'>\n                        <div\n                            id='emailContainer'\n                            className='basicInfoExtraContainerItem'\n                        >\n                            {this.props.info.basicInputsContainer.email && (\n                                <>{this.props.email}</>\n                            )}\n                            <p>{this.props.info.basicInputsContainer.email}</p>\n                        </div>\n                        <div\n                            id='phoneNumberContainer'\n                            className='basicInfoExtraContainerItem'\n                        >\n                            {this.props.info.basicInputsContainer\n                                .phoneNumber && <>{this.props.phone}</>}\n                            <p>\n                                {\n                                    this.props.info.basicInputsContainer\n                                        .phoneNumber\n                                }\n                            </p>\n                        </div>\n                        <div\n                            id='websiteContainer'\n                            className='basicInfoExtraContainerItem'\n                        >\n                            {this.props.info.basicInputsContainer.website && (\n                                <>{this.props.website}</>\n                            )}\n                            <p>\n                                {this.props.info.basicInputsContainer.website}\n                            </p>\n                        </div>\n                    </div>\n                </div>\n                {this.props.info.educationInputsContainer.length !== 0 && (\n                    <div id='educationInfoContainer'>\n                        <h2>Education</h2>\n                        {this.props.info.educationInputsContainer.map(\n                            (education) => {\n                                return (\n                                    <>\n                                        <div\n                                            className='entryContainer'\n                                            key={uniqid()}\n                                        >\n                                            <div\n                                                key={uniqid()}\n                                                className='entry'\n                                            >\n                                                {education.map((detail, i) => {\n                                                    if (\n                                                        detail.charAt(\n                                                            detail.length - 1\n                                                        ) !== ''\n                                                    ) {\n                                                        if (i === 0) {\n                                                            return (\n                                                                <div className='entryTitle'>\n                                                                    <p key={i}>\n                                                                        {detail}\n                                                                    </p>\n                                                                </div>\n                                                            );\n                                                        } else if (i === 1) {\n                                                            return (\n                                                                <div className='entryPlaceName'>\n                                                                    <p key={i}>\n                                                                        {detail}\n                                                                    </p>\n                                                                </div>\n                                                            );\n                                                        } else if (\n                                                            i === 2 ||\n                                                            i === 3\n                                                        ) {\n                                                            return (\n                                                                <div className='entryDate'>\n                                                                    <p key={i}>\n                                                                        {detail}\n                                                                    </p>\n                                                                </div>\n                                                            );\n                                                        }\n                                                    }\n                                                    return '';\n                                                })}\n                                            </div>\n                                        </div>\n                                    </>\n                                );\n                            }\n                        )}\n                    </div>\n                )}\n                {this.props.info.workExperienceInputsContainer.length !== 0 && (\n                    <div id='workExperienceInfoContainer'>\n                        <h2>Work Experience</h2>\n                        {this.props.info.workExperienceInputsContainer.map(\n                            (experience) => {\n                                return (\n                                    <>\n                                        <div\n                                            className='entryContainer'\n                                            key={uniqid()}\n                                        >\n                                            <div\n                                                key={uniqid()}\n                                                className='entry'\n                                            >\n                                                {experience.map((detail, i) => {\n                                                    if (\n                                                        detail.charAt(\n                                                            detail.length - 1\n                                                        ) !== ''\n                                                    ) {\n                                                        if (i === 0) {\n                                                            return (\n                                                                <div className='entryTitle'>\n                                                                    <p key={i}>\n                                                                        {detail}\n                                                                    </p>\n                                                                </div>\n                                                            );\n                                                        } else if (i === 1) {\n                                                            return (\n                                                                <div className='entryPlaceName'>\n                                                                    <p key={i}>\n                                                                        {detail}\n                                                                    </p>\n                                                                </div>\n                                                            );\n                                                        } else if (\n                                                            i === 2 ||\n                                                            i === 3\n                                                        ) {\n                                                            return (\n                                                                <div className='entryDate'>\n                                                                    <p key={i}>\n                                                                        {detail}\n                                                                    </p>\n                                                                </div>\n                                                            );\n                                                        }\n                                                    }\n                                                    return '';\n                                                })}\n                                            </div>\n                                        </div>\n                                    </>\n                                );\n                            }\n                        )}\n                    </div>\n                )}\n            </div>\n        );\n    }\n}\n\nexport default DisplayCV;\n","import React, { Component } from 'react';\nimport InputsContainer from './components/InputsContainer';\nimport DisplayCV from './components/DisplayCV';\nimport './styles/reset.css';\nimport './styles/main.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faEnvelope } from '@fortawesome/free-solid-svg-icons';\nimport { faPhoneAlt } from '@fortawesome/free-solid-svg-icons';\nimport { faExternalLinkAlt } from '@fortawesome/free-solid-svg-icons';\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            educationCounter: -1,\n            workCounter: -1,\n            inputError: true,\n            basicInputsContainer: {},\n            educationInputsContainer: [],\n            workExperienceInputsContainer: [],\n        };\n        this.submitChange = this.submitChange.bind(this);\n        this.changeEditingState = this.changeEditingState.bind(this);\n        this.removeStateItem = this.removeStateItem.bind(this);\n        this.checkEmptyInput = this.checkEmptyInput.bind(this);\n    }\n\n    checkEmptyInput = (e) => {\n        if (e.target.value.length === 0) {\n            return this.setState({ inputError: true });\n        } else if (e.target.value.length > 0) {\n            return this.setState({ inputError: false });\n        }\n    };\n\n    changeEditingState = () => {\n        if (this.state.editing === true) {\n            this.setState({ editing: false });\n        } else this.setState({ editing: true });\n    };\n\n    // removeStateItem = (e) => {\n    //     e.preventDefault();\n    //     const targetId = e.target.id;\n    //     const targetState = e.target.parentNode.parentNode.parentNode.id;\n    //     console.log(targetId);\n    //     this.setState((state) => {\n    //         return state[targetState].splice(targetId, 1);\n    //     });\n    //     console.log(this.state);\n    // };\n\n    removeStateItem = (e) => {\n        e.preventDefault();\n        const targetId = parseInt(e.target.id);\n        const targetState = e.target.parentNode.parentNode.parentNode.id;\n        console.log(targetId);\n\n        let filteredState = this.state[targetState];\n\n        filteredState = filteredState.filter(\n            (obj) => filteredState.indexOf(obj) !== targetId\n        );\n        this.setState((state) => {\n            return (state[targetState] = filteredState);\n        });\n    };\n\n    submitChange = (e) => {\n        e.preventDefault();\n\n        if (this.state.inputError === false) {\n            const allInputElements = Array.from(\n                e.target.parentNode.parentNode.children\n            );\n            const allInputs = [];\n\n            allInputElements.forEach((node) => {\n                if (node.className === 'input') {\n                    allInputs.push(node);\n                }\n            });\n\n            console.log(allInputs);\n\n            //Gathers the information from individual education entries and pushes them into an array\n            const educationInputs = [];\n            allInputs.forEach((input) => {\n                if (\n                    input.name === 'education' &&\n                    input.title !== '' &&\n                    input.value.length > 0\n                ) {\n                    educationInputs.push(input.title + ': ' + input.value);\n                } else if (\n                    input.name === 'education' &&\n                    input.value.length > 0\n                ) {\n                    educationInputs.push(input.title + input.value);\n                }\n            });\n            //Gathers the information from individual work entires and pushes them into an array\n            const workInputs = [];\n            allInputs.forEach((input) => {\n                if (\n                    input.name === 'workExperience' &&\n                    input.title !== '' &&\n                    input.value.length > 0\n                ) {\n                    workInputs.push(input.title + ': ' + input.value);\n                } else if (\n                    input.name === 'workExperience' &&\n                    input.value.length > 0\n                ) {\n                    workInputs.push(input.title + input.value);\n                }\n            });\n\n            //Increase the education counter when submitting an education entry\n            if (e.target.id === 'submitEducationBtn') {\n                this.setState((state) => {\n                    return { educationCounter: state.educationCounter + 1 };\n                });\n            }\n\n            //Increase the work counter when submitting a work entry\n            if (e.target.id === 'submitWorkBtn') {\n                this.setState((state) => {\n                    return { workCounter: state.workCounter + 1 };\n                });\n            }\n\n            //Add the values of the input to their respective state objects\n            //This works, but acts weird when you hit submit again...\n            allInputs.forEach((input) => {\n                this.setState((state) => {\n                    //Creates a new education object within educationInputsCounter, with educationCounter as the object key\n                    if (input.name === 'education') {\n                        return (state.educationInputsContainer[\n                            state.educationCounter\n                        ] = [...educationInputs]);\n                        //Same as above but for work entries\n                    } else if (input.name === 'workExperience') {\n                        return (state.workExperienceInputsContainer[\n                            state.workCounter\n                        ] = [...workInputs]);\n                        //Prevents the applicant's name from displaying as, for example, \"Name: John Smith\"\n                    } else if (\n                        input.title !== 'Name' &&\n                        input.value.length !== 0\n                    ) {\n                        return (state[input.parentNode.id][input.id] =\n                            input.value);\n                    } else {\n                        return (state[input.parentNode.id][input.id] =\n                            input.value);\n                    }\n                });\n            });\n            console.log(this.state);\n        }\n    };\n\n    render() {\n        const info = this.state;\n        const email = <FontAwesomeIcon icon={faEnvelope} />;\n        const phone = <FontAwesomeIcon icon={faPhoneAlt} />;\n        const website = <FontAwesomeIcon icon={faExternalLinkAlt} />;\n        return (\n            <div id='App'>\n                <div id='Inputs'>\n                    <InputsContainer\n                        submitChange={this.submitChange}\n                        removeStateItem={this.removeStateItem}\n                        checkEmptyInput={this.checkEmptyInput}\n                        info={info}\n                        editing={this.state.editing}\n                    />\n                </div>\n                <DisplayCV\n                    info={info}\n                    email={email}\n                    phone={phone}\n                    website={website}\n                />\n            </div>\n        );\n    }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}