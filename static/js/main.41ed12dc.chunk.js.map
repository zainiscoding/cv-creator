{"version":3,"sources":["components/InputBasicInfo.js","components/InputEducation.js","components/InputWork.js","components/InputsContainer.js","components/CvBasicInfoContainer.js","components/CvEducationInfoContainer.js","components/CvWorkInfoContainer.js","components/DisplayCv.js","App.js","index.js"],"names":["InputBasicInfo","props","useState","emailError","setEmailError","phoneNumberError","setPhoneNumberError","emailEditing","setEmailEditing","phoneNumberEditing","setPhoneNumberEditing","setInputFocus","e","target","id","unsetInputFocus","checkEmailInput","value","match","className","htmlFor","requiredText","name","type","title","onChange","checkEmptyInput","onBlur","length","inputError","onClick","submitChange","uniqid","require","InputEducation","addingEducation","setAddingEducation","changeAddEducationState","educationInfo","map","education","index","key","removeStateItem","InputWorkExperience","addingWorkExperience","setAddingWorkExperience","changeAddWorkExperienceState","workInfo","work","InputsContainer","InputWork","BasicInfoContainer","emailIcon","icon","faEnvelope","phoneIcon","faPhoneAlt","websiteIcon","faExternalLinkAlt","basicInfo","email","phoneNumber","website","EducationInfoContainer","detail","i","charAt","WorkInfoContainer","experience","DisplayCv","App","educationCounter","setEducationCounter","workCounter","setWorkCounter","setInputError","setBasicInfo","setEducationInfo","setWorkInfo","preventDefault","allInputElements","Array","from","parentNode","children","allInputs","forEach","node","push","educationInputs","input","workInputs","prevState","targetId","parseInt","targetState","filter","obj","indexOf","console","log","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.41ed12dc.chunk.js","sourcesContent":["import React, { useState } from 'react';\n\nconst InputBasicInfo = (props) => {\n  const [emailError, setEmailError] = useState(false);\n  const [phoneNumberError, setPhoneNumberError] = useState(false);\n  const [emailEditing, setEmailEditing] = useState(true);\n  const [phoneNumberEditing, setPhoneNumberEditing] = useState(true);\n\n  //Lets React know when you're editing an input\n  function setInputFocus(e) {\n    if (e.target.id === 'email') {\n      return setEmailEditing(true);\n    } else if (e.target.id === 'phoneNumber') {\n      return setPhoneNumberEditing(true);\n    }\n  }\n\n  function unsetInputFocus(e) {\n    if (e.target.id === 'email') {\n      return setEmailEditing(false);\n    } else if (e.target.id === 'phoneNumber') {\n      return setPhoneNumberEditing(false);\n    }\n  }\n\n  //Input validation for email\n  function checkEmailInput(e) {\n    setInputFocus(e);\n    const emailTest = /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/;\n    if (e.target.value.match(emailTest)) {\n      unsetInputFocus(e);\n      return setEmailError(false);\n    } else {\n      return setEmailError(true);\n    }\n  }\n\n  //Input validation for phone number\n  function checkPhoneNumberInput(e) {\n    setInputFocus(e);\n\n    const numberTest = /^\\d{10}$/;\n    if (e.target.value.match(numberTest)) {\n      unsetInputFocus(e);\n      return setPhoneNumberError(false);\n    } else if (e.target.value.length === 0) {\n      return setPhoneNumberError(false);\n    } else {\n      return setPhoneNumberError(true);\n    }\n  }\n\n  return (\n    <div id='basicInputsContainer' className='inputArea'>\n      <h2>Basic Information</h2>\n      <label htmlFor='nameInput'>Full name {props.requiredText}</label>\n      <input\n        name='basic'\n        type='text'\n        id='name'\n        className='input'\n        title='Name'\n        onChange={props.checkEmptyInput}\n      ></input>\n      <label htmlFor='email'>Email address {props.requiredText}</label>\n      {emailError === true && emailEditing === true && (\n        <div className='inputErrorContainer'>\n          <p className='inputFieldError'>Enter a valid email address!</p>\n        </div>\n      )}\n      <input\n        name='basic'\n        type='email'\n        id='email'\n        className='input'\n        title='Email'\n        onChange={checkEmailInput}\n        onBlur={checkEmailInput}\n      ></input>\n      <label htmlFor='phoneNumber'>Phone number</label>\n      {phoneNumberError === true && phoneNumberEditing === true && (\n        <div className='inputErrorContainer'>\n          <p className='inputFieldError'>Enter a valid phone number!</p>\n        </div>\n      )}\n      <input\n        name='basic'\n        type='text'\n        id='phoneNumber'\n        className='input'\n        title='Phone'\n        onChange={checkPhoneNumberInput}\n      ></input>\n      <label htmlFor='website'>Website</label>\n      <input\n        name='basic'\n        type='url'\n        id='website'\n        className='input'\n        title='Website'\n      ></input>\n      {props.inputError === false &&\n        emailEditing === false &&\n        emailError === false &&\n        phoneNumberError === false && (\n          <div className='submitBtnContainer'>\n            <button\n              type='submit'\n              id='submitBasicInfoBtn'\n              onClick={props.submitChange}\n            >\n              Submit\n            </button>\n          </div>\n        )}\n    </div>\n  );\n};\n\nexport default InputBasicInfo;\n","import React, { useState } from 'react';\nvar uniqid = require('uniqid');\n\nconst InputEducation = (props) => {\n  const [addingEducation, setAddingEducation] = useState(false);\n\n  //Used to submit or cancel entering an entry\n  function changeAddEducationState(e) {\n    if (addingEducation === true) {\n      props.submitChange(e);\n    }\n    //When you combine these two if statements into one, the 'Submit education' button always shows. Idk why!\n    if (addingEducation === true) {\n      setAddingEducation(false);\n    } else {\n      setAddingEducation(true);\n    }\n  }\n\n  return (\n    <div id='educationInputsContainer' className='inputArea'>\n      <h2>Education</h2>\n      {addingEducation === true && (\n        <>\n          <label htmlFor='institutionNameInput'>\n            Institution name {props.requiredText}\n          </label>\n          <input\n            name='education'\n            type='text'\n            id='institutionName'\n            className='input'\n            title=''\n            onChange={props.checkEmptyInput}\n          ></input>\n          <label htmlFor='courseName'>Course name</label>\n          <input\n            name='education'\n            type='text'\n            id='courseName'\n            className='input'\n            title=''\n          ></input>\n          <label htmlFor='startDate'>Start date</label>\n          <input\n            name='education'\n            type='date'\n            id='startDate'\n            className='input'\n            title='Start'\n          ></input>\n          <label htmlFor='endDate'>End date</label>\n          <input\n            name='education'\n            type='date'\n            id='endDate'\n            className='input'\n            title='End'\n          ></input>\n          {props.inputError === false && (\n            <div id='submitEducationBtnContainer'>\n              <button id='submitEducationBtn' onClick={changeAddEducationState}>\n                Submit entry\n              </button>\n            </div>\n          )}\n          <div id='cancelAddEducation'>\n            <button\n              id='cancelAddEducationBtnBtn'\n              className='cancelBtn'\n              onClick={changeAddEducationState}\n            >\n              Cancel\n            </button>\n          </div>\n        </>\n      )}\n      {addingEducation === false && (\n        <div id='addEducationBtnContainer'>\n          <button id='addEducationBtn' onClick={changeAddEducationState}>\n            Add entry\n          </button>\n        </div>\n      )}\n      <div id='inputAreaEducationInfoContainer'>\n        {props.educationInfo.map((education, index) => {\n          return (\n            <div id={index} className='entryInputArea' key={uniqid()}>\n              <button\n                id={index}\n                onClick={props.removeStateItem}\n                className='entryDeleteBtn'\n              >\n                X\n              </button>\n              <p>Education {index + 1}</p>\n              {education[0]}\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default InputEducation;\n","import React, { useState } from 'react';\nvar uniqid = require('uniqid');\n\nconst InputWorkExperience = (props) => {\n  const [addingWorkExperience, setAddingWorkExperience] = useState(false);\n\n  //Used to submit or cancel entering an entry\n  function changeAddWorkExperienceState(e) {\n    if (addingWorkExperience === true) {\n      props.submitChange(e);\n    }\n    //When you combine these two if statements into one, the 'Submit education' button always shows. Idk why!\n    if (addingWorkExperience === true) {\n      setAddingWorkExperience(false);\n    } else {\n      setAddingWorkExperience(true);\n    }\n  }\n\n  return (\n    <div id='workInputsContainer' className='inputArea'>\n      <h2>Work Experience</h2>\n      {addingWorkExperience === true && (\n        <>\n          <label htmlFor='companyName'>Company name {props.requiredText}</label>\n          <input\n            name='workExperience'\n            type='text'\n            id='companyName'\n            className='input'\n            title=''\n            onChange={props.checkEmptyInput}\n          ></input>\n          <label htmlFor='jobTitleInput'>Job Title</label>\n          <input\n            name='workExperience'\n            type='text'\n            id='jobTitle'\n            className='input'\n            title=''\n          ></input>\n          <label htmlFor='startDate'>Start date</label>\n          <input\n            name='workExperience'\n            type='date'\n            id='startDate'\n            className='input'\n            title='Start'\n          ></input>\n          <label htmlFor='endDate'>End date</label>\n          <input\n            name='workExperience'\n            type='date'\n            id='endDate'\n            className='input'\n            title='End'\n          ></input>\n          {props.inputError === false && (\n            <div id='submitWorkBtnContainer'>\n              <button id='submitWorkBtn' onClick={changeAddWorkExperienceState}>\n                Submit entry\n              </button>\n            </div>\n          )}\n          <div id='cancelAddWorkExperience'>\n            <button\n              id='cancelAddWorkExperienceBtn'\n              className='cancelBtn'\n              onClick={changeAddWorkExperienceState}\n            >\n              Cancel\n            </button>\n          </div>\n        </>\n      )}\n      {addingWorkExperience === false && (\n        <div id='addWorkExperienceBtnContainer'>\n          <button\n            id='addWorkExperienceButton'\n            onClick={changeAddWorkExperienceState}\n          >\n            Add entry\n          </button>\n        </div>\n      )}\n      <div id='inputAreaWorkInfoContainer'>\n        {props.workInfo.map((work, index) => {\n          return (\n            <div id={index} className='entryInputArea' key={uniqid()}>\n              <button\n                id={index}\n                onClick={props.removeStateItem}\n                className='entryDeleteBtn'\n              >\n                X\n              </button>\n              <p>Work {index + 1}</p>\n              {work[0]}\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default InputWorkExperience;\n","import React from 'react';\nimport InputBasicInfo from './InputBasicInfo';\nimport InputEducation from './InputEducation';\nimport InputWork from './InputWork';\n\nconst InputsContainer = (props) => {\n  const requiredText = <p className='textRequired'>Required</p>;\n  return (\n    <div id='inputsContainer'>\n      <InputBasicInfo\n        submitChange={props.submitChange}\n        checkEmptyInput={props.checkEmptyInput}\n        requiredText={requiredText}\n        inputError={props.inputError}\n      />\n      <InputEducation\n        educationInfo={props.educationInfo}\n        submitChange={props.submitChange}\n        removeStateItem={props.removeStateItem}\n        checkEmptyInput={props.checkEmptyInput}\n        requiredText={requiredText}\n        inputError={props.inputError}\n      />\n      <InputWork\n        workInfo={props.workInfo}\n        submitChange={props.submitChange}\n        removeStateItem={props.removeStateItem}\n        checkEmptyInput={props.checkEmptyInput}\n        requiredText={requiredText}\n        inputError={props.inputError}\n      />\n    </div>\n  );\n};\n\nexport default InputsContainer;\n","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faEnvelope } from '@fortawesome/free-solid-svg-icons';\nimport { faPhoneAlt } from '@fortawesome/free-solid-svg-icons';\nimport { faExternalLinkAlt } from '@fortawesome/free-solid-svg-icons';\n\nconst BasicInfoContainer = (props) => {\n  const emailIcon = <FontAwesomeIcon icon={faEnvelope} />;\n  const phoneIcon = <FontAwesomeIcon icon={faPhoneAlt} />;\n  const websiteIcon = <FontAwesomeIcon icon={faExternalLinkAlt} />;\n  return (\n    <div id='basicInfoContainer'>\n      <div id='nameContainer'>\n        <p>{props.basicInfo.name}</p>\n      </div>\n      <div id='basicInfoExtraContainer'>\n        <div id='emailContainer' className='basicInfoExtraContainerItem'>\n          {props.basicInfo.email && <p>{emailIcon}</p>}\n          <p>{props.basicInfo.email}</p>\n        </div>\n        <div id='phoneNumberContainer' className='basicInfoExtraContainerItem'>\n          {props.basicInfo.phoneNumber && <p>{phoneIcon}</p>}\n          <p>{props.basicInfo.phoneNumber}</p>\n        </div>\n        <div id='websiteContainer' className='basicInfoExtraContainerItem'>\n          {props.basicInfo.website && <p>{websiteIcon}</p>}\n          <p>{props.basicInfo.website}</p>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default BasicInfoContainer;\n","import React from 'react';\nvar uniqid = require('uniqid');\n\nconst EducationInfoContainer = (props) => {\n  return (\n    <div id='educationInfoContainer'>\n      <h2>Education</h2>\n      {props.educationInfo.map((education) => {\n        return (\n          <>\n            <div className='entryContainer' key={uniqid()}>\n              <div key={uniqid()} className='entry'>\n                {education.map((detail, i) => {\n                  if (detail.charAt(detail.length - 1) !== '') {\n                    if (i === 0) {\n                      return (\n                        <div className='entryTitle'>\n                          <p key={i}>{detail}</p>\n                        </div>\n                      );\n                    } else if (i === 1) {\n                      return (\n                        <div className='entryPlaceName'>\n                          <p key={i}>{detail}</p>\n                        </div>\n                      );\n                    } else if (i === 2 || i === 3) {\n                      return (\n                        <div className='entryDate'>\n                          <p key={i}>{detail}</p>\n                        </div>\n                      );\n                    }\n                  }\n                  return '';\n                })}\n              </div>\n            </div>\n          </>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default EducationInfoContainer;\n","import React from 'react';\nvar uniqid = require('uniqid');\n\nconst WorkInfoContainer = (props) => {\n  return (\n    <div id='workInfoContainer'>\n      <h2>Work Experience</h2>\n      {props.workInfo.map((experience) => {\n        return (\n          <>\n            <div className='entryContainer' key={uniqid()}>\n              <div key={uniqid()} className='entry'>\n                {experience.map((detail, i) => {\n                  if (detail.charAt(detail.length - 1) !== '') {\n                    if (i === 0) {\n                      return (\n                        <div className='entryTitle'>\n                          <p key={i}>{detail}</p>\n                        </div>\n                      );\n                    } else if (i === 1) {\n                      return (\n                        <div className='entryPlaceName'>\n                          <p key={i}>{detail}</p>\n                        </div>\n                      );\n                    } else if (i === 2 || i === 3) {\n                      return (\n                        <div className='entryDate'>\n                          <p key={i}>{detail}</p>\n                        </div>\n                      );\n                    }\n                  }\n                  return '';\n                })}\n              </div>\n            </div>\n          </>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default WorkInfoContainer;\n","import React from 'react';\nimport BasicInfoContainer from './CvBasicInfoContainer';\nimport EducationInfoContainer from './CvEducationInfoContainer';\nimport WorkInfoContainer from './CvWorkInfoContainer';\n\nconst DisplayCv = (props) => {\n  return (\n    <div id='CV'>\n      <BasicInfoContainer basicInfo={props.basicInfo} />\n      {props.educationInfo.length !== 0 && (\n        <EducationInfoContainer educationInfo={props.educationInfo} />\n      )}\n      {props.workInfo.length !== 0 && (\n        <WorkInfoContainer workInfo={props.workInfo} />\n      )}\n    </div>\n  );\n};\n\nexport default DisplayCv;\n","import React, { useState } from 'react';\nimport InputsContainer from './components/InputsContainer';\nimport DisplayCv from './components/DisplayCv';\nimport './styles/reset.css';\nimport './styles/main.css';\n\nconst App = () => {\n  const [educationCounter, setEducationCounter] = useState(-1);\n  const [workCounter, setWorkCounter] = useState(-1);\n  const [inputError, setInputError] = useState(true);\n  const [basicInfo, setBasicInfo] = useState({});\n  const [educationInfo, setEducationInfo] = useState([]);\n  const [workInfo, setWorkInfo] = useState([]);\n\n  //Checks for an empty input and reflects it in the state. Used to prevent submission\n  function checkEmptyInput(e) {\n    if (e.target.value.length === 0) {\n      return setInputError(true);\n    } else if (e.target.value.length > 0) {\n      return setInputError(false);\n    }\n    console.log(inputError);\n  }\n\n  //Remove an entry from the state\n  function removeStateItem(e) {\n    e.preventDefault();\n    const targetId = parseInt(e.target.id);\n    const targetState = e.target.parentNode.parentNode.parentNode.id;\n\n    if (targetState === 'educationInputsContainer') {\n      setEducationInfo(\n        educationInfo.filter((obj) => educationInfo.indexOf(obj) !== targetId)\n      );\n    } else if (targetState === 'workInputsContainer') {\n      setWorkInfo(workInfo.filter((obj) => workInfo.indexOf(obj) !== targetId));\n    }\n  }\n\n  function submitChange(e) {\n    e.preventDefault();\n\n    if (inputError === false) {\n      const allInputElements = Array.from(\n        e.target.parentNode.parentNode.children\n      );\n      const allInputs = [];\n\n      allInputElements.forEach((node) => {\n        if (node.className === 'input') {\n          allInputs.push(node);\n        }\n      });\n\n      //Gathers the information from individual education entries and pushes them into an array\n      const educationInputs = [];\n      allInputs.forEach((input) => {\n        if (\n          input.name === 'education' &&\n          input.title !== '' &&\n          input.value.length > 0\n        ) {\n          educationInputs.push(input.title + ': ' + input.value);\n        } else if (input.name === 'education' && input.value.length > 0) {\n          educationInputs.push(input.title + input.value);\n        }\n      });\n\n      //Gathers the information from individual work entires and pushes them into an array\n      const workInputs = [];\n      allInputs.forEach((input) => {\n        if (\n          input.name === 'workExperience' &&\n          input.title !== '' &&\n          input.value.length > 0\n        ) {\n          workInputs.push(input.title + ': ' + input.value);\n        } else if (input.name === 'workExperience' && input.value.length > 0) {\n          workInputs.push(input.title + input.value);\n        }\n      });\n\n      //Increase the education counter when submitting an education entry\n      if (e.target.id === 'submitEducationBtn') {\n        setEducationCounter(educationCounter + 1);\n      }\n\n      //Increase the work counter when submitting a work entry\n      if (e.target.id === 'submitWorkBtn') {\n        setWorkCounter(workCounter + 1);\n      }\n\n      //Looks at all the inputs and sets their respective states to their values\n      allInputs.forEach((input) => {\n        if (input.name === 'education') {\n          return setEducationInfo([...educationInfo, [...educationInputs]]);\n        } else if (input.name === 'workExperience') {\n          setWorkInfo([...workInfo, [...workInputs]]);\n        } else {\n          return setBasicInfo((prevState) => ({\n            ...prevState,\n            [input.id]: input.value,\n          }));\n        }\n      });\n    }\n  }\n\n  return (\n    <div id='App'>\n      <div id='Inputs'>\n        <InputsContainer\n          submitChange={submitChange}\n          removeStateItem={removeStateItem}\n          checkEmptyInput={checkEmptyInput}\n          basicInfo={basicInfo}\n          educationInfo={educationInfo}\n          workInfo={workInfo}\n          inputError={inputError}\n        />\n      </div>\n      <DisplayCv\n        basicInfo={basicInfo}\n        educationInfo={educationInfo}\n        workInfo={workInfo}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}