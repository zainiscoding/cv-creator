{"version":3,"sources":["components/InputBasicInfo.js","components/InputEducation.js","components/InputWorkExperience.js","components/InputsContainer.js","components/DisplayCV.js","App.js","index.js"],"names":["InputBasicInfo","id","className","htmlFor","name","type","title","onClick","this","props","submitChange","Component","uniqid","require","InputEducation","changeAddEducationState","e","state","addingEducation","setState","bind","info","educationInputsContainer","map","education","index","key","removeStateItem","InputWorkExperience","changeAddWorkExperienceState","addingWorkExperience","workExperienceInputsContainer","work","InputsContainer","BasicsInputsContainer","DisplayCV","basicInputsContainer","email","phoneNumber","phone","website","length","detail","i","charAt","experience","App","changeEditingState","editing","preventDefault","targetId","parseInt","target","targetState","parentNode","console","log","filteredState","filter","obj","indexOf","allInputElements","Array","from","children","allInputs","forEach","node","push","educationInputs","input","value","workInputs","educationCounter","workCounter","icon","faEnvelope","faPhoneAlt","faExternalLinkAlt","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.809a6193.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nclass InputBasicInfo extends Component {\n    render() {\n        return (\n            <div id='basicInputsContainer' className='inputArea'>\n                <h2>Basic Information</h2>\n                <label htmlFor='nameInput'>Full name</label>\n                <input\n                    name='basic'\n                    type='text'\n                    id='name'\n                    className='input'\n                    title='Name'\n                ></input>\n                <label htmlFor='email'>Email address</label>\n                <input\n                    name='basic'\n                    type='email'\n                    id='email'\n                    className='input'\n                    title='Email'\n                ></input>\n                <label htmlFor='phoneNumber'>Phone number</label>\n                <input\n                    name='basic'\n                    type='number'\n                    id='phoneNumber'\n                    className='input'\n                    title='Phone'\n                ></input>\n                <label htmlFor='website'>Website</label>\n                <input\n                    name='basic'\n                    type='url'\n                    id='website'\n                    className='input'\n                    title='Website'\n                ></input>\n                <div className='submitBtnContainer'>\n                    <button\n                        type='submit'\n                        id='submitBasicInfoBtn'\n                        onClick={this.props.submitChange}\n                    >\n                        Submit\n                    </button>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default InputBasicInfo;\n","import React, { Component } from 'react';\nvar uniqid = require('uniqid');\n\nclass InputEducation extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            addingEducation: false,\n        };\n        this.changeAddEducationState = this.changeAddEducationState.bind(this);\n    }\n\n    changeAddEducationState = (e) => {\n        if (this.state.addingEducation === true) {\n            this.props.submitChange(e);\n        }\n\n        if (this.state.addingEducation === true) {\n            this.setState({ addingEducation: false });\n        } else this.setState({ addingEducation: true });\n    };\n\n    render() {\n        return (\n            <div id='educationInputsContainer' className='inputArea'>\n                <h2>Education</h2>\n                {this.state.addingEducation === true && (\n                    <>\n                        <label htmlFor='institutionNameInput'>\n                            Institution name\n                        </label>\n                        <input\n                            name='education'\n                            type='text'\n                            id='institutionName'\n                            className='input'\n                            title=''\n                        ></input>\n                        <label htmlFor='courseName'>Course name</label>\n                        <input\n                            name='education'\n                            type='text'\n                            id='courseName'\n                            className='input'\n                            title=''\n                        ></input>\n                        <label htmlFor='startDate'>Start date</label>\n                        <input\n                            name='education'\n                            type='date'\n                            id='startDate'\n                            className='input'\n                            title='Start'\n                        ></input>\n                        <label htmlFor='endDate'>End date</label>\n                        <input\n                            name='education'\n                            type='date'\n                            id='endDate'\n                            className='input'\n                            title='End'\n                        ></input>\n                        <div id='submitEducationBtnContainer'>\n                            <button\n                                id='submitEducationBtn'\n                                onClick={this.changeAddEducationState}\n                            >\n                                Submit entry\n                            </button>\n                        </div>\n                    </>\n                )}\n                {this.state.addingEducation === false && (\n                    <div id='addEducationBtnContainer'>\n                        <button\n                            id='addEducationBtn'\n                            onClick={this.changeAddEducationState}\n                        >\n                            Add entry\n                        </button>\n                    </div>\n                )}\n                <div id='inputAreaEducationInfoContainer'>\n                    {this.props.info.educationInputsContainer.map(\n                        (education, index) => {\n                            return (\n                                <div\n                                    id={index}\n                                    className='entryInputArea'\n                                    key={uniqid()}\n                                >\n                                    <button\n                                        id={index}\n                                        onClick={this.props.removeStateItem}\n                                        className='entryDeleteBtn'\n                                    >\n                                        X\n                                    </button>\n                                    <p>Education {index + 1}</p>\n                                    {education[0]}\n                                </div>\n                            );\n                        }\n                    )}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default InputEducation;\n","import React, { Component } from 'react';\nvar uniqid = require('uniqid');\n\nclass InputWorkExperience extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            addingWorkExperience: false,\n        };\n        this.changeAddWorkExperienceState = this.changeAddWorkExperienceState.bind(\n            this\n        );\n    }\n\n    changeAddWorkExperienceState = (e) => {\n        if (this.state.addingWorkExperience === true) {\n            this.props.submitChange(e);\n        }\n\n        if (this.state.addingWorkExperience === true) {\n            this.setState({ addingWorkExperience: false });\n        } else this.setState({ addingWorkExperience: true });\n    };\n\n    render() {\n        return (\n            <div id='workExperienceInputsContainer' className='inputArea'>\n                <h2>Work Experience</h2>\n                {this.state.addingWorkExperience === true && (\n                    <>\n                        <label htmlFor='companyName'>Company name</label>\n                        <input\n                            name='workExperience'\n                            type='text'\n                            id='companyName'\n                            className='input'\n                            title=''\n                        ></input>\n                        <label htmlFor='jobTitleInput'>Job Title</label>\n                        <input\n                            name='workExperience'\n                            type='text'\n                            id='jobTitle'\n                            className='input'\n                            title=''\n                        ></input>\n                        <label htmlFor='startDate'>Start date</label>\n                        <input\n                            name='workExperience'\n                            type='date'\n                            id='startDate'\n                            className='input'\n                            title='Start'\n                        ></input>\n                        <label htmlFor='endDate'>End date</label>\n                        <input\n                            name='workExperience'\n                            type='date'\n                            id='endDate'\n                            className='input'\n                            title='End'\n                        ></input>\n                        <div id='submitWorkBtnContainer'>\n                            <button\n                                id='submitWorkBtn'\n                                onClick={this.changeAddWorkExperienceState}\n                            >\n                                Submit entry\n                            </button>\n                        </div>\n                    </>\n                )}\n                {this.state.addingWorkExperience === false && (\n                    <div id='addWorkExperienceBtnContainer'>\n                        <button\n                            id='addWorkExperienceButton'\n                            onClick={this.changeAddWorkExperienceState}\n                        >\n                            Add entry\n                        </button>\n                    </div>\n                )}\n                <div id='inputAreaWorkInfoContainer'>\n                    {this.props.info.workExperienceInputsContainer.map(\n                        (work, index) => {\n                            return (\n                                <div\n                                    id={index}\n                                    className='entryInputArea'\n                                    key={uniqid()}\n                                >\n                                    <button\n                                        id={index}\n                                        onClick={this.props.removeStateItem}\n                                        className='entryDeleteBtn'\n                                    >\n                                        X\n                                    </button>\n                                    <p>Work {index + 1}</p>\n                                    {work[0]}\n                                </div>\n                            );\n                        }\n                    )}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default InputWorkExperience;\n","import React, { Component } from 'react';\nimport InputBasicInfo from './InputBasicInfo';\nimport InputEducation from './InputEducation';\nimport InputWorkExperience from './InputWorkExperience';\n\nclass InputsContainer extends Component {\n    render() {\n        return (\n            <div id='inputsContainer'>\n                <InputBasicInfo\n                    info={this.props.BasicsInputsContainer}\n                    submitChange={this.props.submitChange}\n                />\n                <InputEducation\n                    submitChange={this.props.submitChange}\n                    removeStateItem={this.props.removeStateItem}\n                    info={this.props.info}\n                />\n                <InputWorkExperience\n                    submitChange={this.props.submitChange}\n                    removeStateItem={this.props.removeStateItem}\n                    info={this.props.info}\n                />\n            </div>\n        );\n    }\n}\n\nexport default InputsContainer;\n","import React, { Component } from 'react';\nvar uniqid = require('uniqid');\n\nclass DisplayCV extends Component {\n    render() {\n        return (\n            <div id='CV'>\n                <div id='basicInfoContainer'>\n                    <div id='nameContainer'>\n                        <p>{this.props.info.basicInputsContainer.name}</p>\n                    </div>\n                    <div id='basicInfoExtraContainer'>\n                        <div\n                            id='emailContainer'\n                            className='basicInfoExtraContainerItem'\n                        >\n                            {this.props.info.basicInputsContainer.email && (\n                                <>{this.props.email}</>\n                            )}\n                            <p>{this.props.info.basicInputsContainer.email}</p>\n                        </div>\n                        <div\n                            id='phoneNumberContainer'\n                            className='basicInfoExtraContainerItem'\n                        >\n                            {this.props.info.basicInputsContainer\n                                .phoneNumber && <>{this.props.phone}</>}\n                            <p>\n                                {\n                                    this.props.info.basicInputsContainer\n                                        .phoneNumber\n                                }\n                            </p>\n                        </div>\n                        <div\n                            id='websiteContainer'\n                            className='basicInfoExtraContainerItem'\n                        >\n                            {this.props.info.basicInputsContainer.website && (\n                                <>{this.props.website}</>\n                            )}\n                            <p>\n                                {this.props.info.basicInputsContainer.website}\n                            </p>\n                        </div>\n                    </div>\n                </div>\n                {this.props.info.educationInputsContainer.length !== 0 && (\n                    <div id='educationInfoContainer'>\n                        <h2>Education</h2>\n                        {this.props.info.educationInputsContainer.map(\n                            (education) => {\n                                return (\n                                    <>\n                                        <div\n                                            className='entryContainer'\n                                            key={uniqid()}\n                                        >\n                                            <div\n                                                key={uniqid()}\n                                                className='entry'\n                                            >\n                                                {education.map((detail, i) => {\n                                                    if (\n                                                        detail.charAt(\n                                                            detail.length - 1\n                                                        ) !== ''\n                                                    ) {\n                                                        if (i === 0) {\n                                                            return (\n                                                                <div className='entryTitle'>\n                                                                    <p key={i}>\n                                                                        {detail}\n                                                                    </p>\n                                                                </div>\n                                                            );\n                                                        } else if (i === 1) {\n                                                            return (\n                                                                <div className='entryPlaceName'>\n                                                                    <p key={i}>\n                                                                        {detail}\n                                                                    </p>\n                                                                </div>\n                                                            );\n                                                        } else if (\n                                                            i === 2 ||\n                                                            i === 3\n                                                        ) {\n                                                            return (\n                                                                <div className='entryDate'>\n                                                                    <p key={i}>\n                                                                        {detail}\n                                                                    </p>\n                                                                </div>\n                                                            );\n                                                        }\n                                                    }\n                                                    return '';\n                                                })}\n                                            </div>\n                                        </div>\n                                    </>\n                                );\n                            }\n                        )}\n                    </div>\n                )}\n                {this.props.info.workExperienceInputsContainer.length !== 0 && (\n                    <div id='workExperienceInfoContainer'>\n                        <h2>Work Experience</h2>\n                        {this.props.info.workExperienceInputsContainer.map(\n                            (experience) => {\n                                return (\n                                    <>\n                                        <div\n                                            className='entryContainer'\n                                            key={uniqid()}\n                                        >\n                                            <div\n                                                key={uniqid()}\n                                                className='entry'\n                                            >\n                                                {experience.map((detail, i) => {\n                                                    if (\n                                                        detail.charAt(\n                                                            detail.length - 1\n                                                        ) !== ''\n                                                    ) {\n                                                        if (i === 0) {\n                                                            return (\n                                                                <div className='entryTitle'>\n                                                                    <p key={i}>\n                                                                        {detail}\n                                                                    </p>\n                                                                </div>\n                                                            );\n                                                        } else if (i === 1) {\n                                                            return (\n                                                                <div className='entryPlaceName'>\n                                                                    <p key={i}>\n                                                                        {detail}\n                                                                    </p>\n                                                                </div>\n                                                            );\n                                                        } else if (\n                                                            i === 2 ||\n                                                            i === 3\n                                                        ) {\n                                                            return (\n                                                                <div className='entryDate'>\n                                                                    <p key={i}>\n                                                                        {detail}\n                                                                    </p>\n                                                                </div>\n                                                            );\n                                                        }\n                                                    }\n                                                    return '';\n                                                })}\n                                            </div>\n                                        </div>\n                                    </>\n                                );\n                            }\n                        )}\n                    </div>\n                )}\n            </div>\n        );\n    }\n}\n\nexport default DisplayCV;\n","import React, { Component } from 'react';\nimport InputsContainer from './components/InputsContainer';\nimport DisplayCV from './components/DisplayCV';\nimport './styles/reset.css';\nimport './styles/main.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faEnvelope } from '@fortawesome/free-solid-svg-icons';\nimport { faPhoneAlt } from '@fortawesome/free-solid-svg-icons';\nimport { faExternalLinkAlt } from '@fortawesome/free-solid-svg-icons';\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            educationCounter: -1,\n            workCounter: -1,\n            basicInputsContainer: {},\n            educationInputsContainer: [],\n            workExperienceInputsContainer: [],\n        };\n        this.submitChange = this.submitChange.bind(this);\n        this.changeEditingState = this.changeEditingState.bind(this);\n        this.removeStateItem = this.removeStateItem.bind(this);\n    }\n\n    changeEditingState = () => {\n        if (this.state.editing === true) {\n            this.setState({ editing: false });\n        } else this.setState({ editing: true });\n    };\n\n    // removeStateItem = (e) => {\n    //     e.preventDefault();\n    //     const targetId = e.target.id;\n    //     const targetState = e.target.parentNode.parentNode.parentNode.id;\n    //     console.log(targetId);\n    //     this.setState((state) => {\n    //         return state[targetState].splice(targetId, 1);\n    //     });\n    //     console.log(this.state);\n    // };\n\n    removeStateItem = (e) => {\n        e.preventDefault();\n        const targetId = parseInt(e.target.id);\n        const targetState = e.target.parentNode.parentNode.parentNode.id;\n        console.log(targetId);\n\n        let filteredState = this.state[targetState];\n\n        filteredState = filteredState.filter(\n            (obj) => filteredState.indexOf(obj) !== targetId\n        );\n        this.setState((state) => {\n            return (state[targetState] = filteredState);\n        });\n    };\n\n    submitChange = (e) => {\n        e.preventDefault();\n\n        const allInputElements = Array.from(\n            e.target.parentNode.parentNode.children\n        );\n        const allInputs = [];\n\n        allInputElements.forEach((node) => {\n            if (node.className === 'input') {\n                allInputs.push(node);\n            }\n        });\n\n        console.log(allInputs);\n\n        //Gathers the information from individual education entries and pushes them into an array\n        const educationInputs = [];\n        allInputs.forEach((input) => {\n            if (\n                input.name === 'education' &&\n                input.title !== '' &&\n                input.value.length > 0\n            ) {\n                educationInputs.push(input.title + ': ' + input.value);\n            } else if (input.name === 'education' && input.value.length > 0) {\n                educationInputs.push(input.title + input.value);\n            }\n        });\n        //Gathers the information from individual work entires and pushes them into an array\n        const workInputs = [];\n        allInputs.forEach((input) => {\n            if (\n                input.name === 'workExperience' &&\n                input.title !== '' &&\n                input.value.length > 0\n            ) {\n                workInputs.push(input.title + ': ' + input.value);\n            } else if (\n                input.name === 'workExperience' &&\n                input.value.length > 0\n            ) {\n                workInputs.push(input.title + input.value);\n            }\n        });\n\n        //Increase the education counter when submitting an education entry\n        if (e.target.id === 'submitEducationBtn') {\n            this.setState((state) => {\n                return { educationCounter: state.educationCounter + 1 };\n            });\n        }\n\n        //Increase the work counter when submitting a work entry\n        if (e.target.id === 'submitWorkBtn') {\n            this.setState((state) => {\n                return { workCounter: state.workCounter + 1 };\n            });\n        }\n\n        //Add the values of the input to their respective state objects\n        //This works, but acts weird when you hit submit again...\n        allInputs.forEach((input) => {\n            this.setState((state) => {\n                //Creates a new education object within educationInputsCounter, with educationCounter as the object key\n                if (input.name === 'education') {\n                    return (state.educationInputsContainer[\n                        state.educationCounter\n                    ] = [...educationInputs]);\n                    //Same as above but for work entries\n                } else if (input.name === 'workExperience') {\n                    return (state.workExperienceInputsContainer[\n                        state.workCounter\n                    ] = [...workInputs]);\n                    //Prevents the applicant's name from displaying as, for example, \"Name: John Smith\"\n                } else if (input.title !== 'Name' && input.value.length !== 0) {\n                    return (state[input.parentNode.id][input.id] = input.value);\n                } else {\n                    return (state[input.parentNode.id][input.id] = input.value);\n                }\n            });\n        });\n        console.log(this.state);\n    };\n\n    render() {\n        const info = this.state;\n        const email = <FontAwesomeIcon icon={faEnvelope} />;\n        const phone = <FontAwesomeIcon icon={faPhoneAlt} />;\n        const website = <FontAwesomeIcon icon={faExternalLinkAlt} />;\n        return (\n            <div id='App'>\n                <div id='Inputs'>\n                    <InputsContainer\n                        submitChange={this.submitChange}\n                        removeStateItem={this.removeStateItem}\n                        info={info}\n                        editing={this.state.editing}\n                    />\n                </div>\n                <DisplayCV\n                    info={info}\n                    email={email}\n                    phone={phone}\n                    website={website}\n                />\n            </div>\n        );\n    }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}